plugins {
    id 'com.android.application'
}
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 30




    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.videopose3d"
        minSdkVersion 29
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                arguments '-DANDROID_TOOLCHAIN=clang', '-DANDROID_PLATFORM=android-16', '-DANDROID_STL=c++_static'
                cppFlags "-frtti -fexceptions", '-fsigned-char', "-std=c++11"
                abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
                cFlags '-O3', '-fsigned-char', '-std=c11'
                cppFlags "-std=c++11"
            }
        }

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            abiFilters.clear()
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    splits {
        // Configures multiple APKs based on ABI.
        abi {
            // Enables building multiple APKs per ABI.
            enable true

            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86, armeabi-v7a, and mips.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
            include 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'

            // Specifies that we want to also generate a universal APK that includes all ABIs.
            universalApk false
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
            version = "3.10.2"
        }
    }

    ndkVersion '21.3.6528147'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    implementation project(path: ':posenet')
    implementation project(path: ':openCVLibrary341')
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    //implementation 'org.pytorch:pytorch_android:1.7.0'
    //implementation 'org.pytorch:pytorch_android_torchvision:1.7.0'
    implementation 'org.pytorch:pytorch_android:1.8.0-SNAPSHOT'
    implementation 'org.pytorch:pytorch_android_torchvision:1.8.0-SNAPSHOT'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.2.0'
    implementation "androidx.core:core-ktx:+"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

repositories {
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
    mavenCentral()
}



